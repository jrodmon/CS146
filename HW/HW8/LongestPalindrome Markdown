first thing to note is that if length of word is odd or even
if odd something special with center
if even the two middle letters are the same

First idea is to sort the string alphabetically
have two pointers
place one letter at the beginning the same letter at the end and reduce the count of that letter
if only one of the letters is left, check if it is the center, if not trash the letter
repeat this 


WAIT WE DONT HAVE TO FIND THE LONGEST PALINDROME, JUST THE LENGTH
ok so lets note even or odd words
if it is an even length word, the longest palindrome is an even amount of all letters
if it is an odd length word, have even amount of letters and one character will have an odd amount

create a hashmap with the character as a key pointing to a value 
loop through string using each character as a key.
  get the hashvalue, increment it, put it back in that spot.

  iterate through hashmap and check if character counts are even
    if character count is even
      count += hashvalue
    else if characterCount is odd
      count += hashvalue
      bool isOdd = true

    if (isOdd)
      count++
  return count


abccccdd
dccaccd = 7
a = 1
b = 1
c = 4
d = 2
4 + 2 + 1

//Problem: what if a character has an odd count that isnt 1

aabbbbbdd
adbbbbbda = 9
a = 2
b = 5
d = 2
2 + 4 + 2 ~

